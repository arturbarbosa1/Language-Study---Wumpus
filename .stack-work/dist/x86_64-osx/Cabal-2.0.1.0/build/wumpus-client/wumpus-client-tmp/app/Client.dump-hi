
==================== FINAL INTERFACE ====================
2018-05-10 00:09:44.420669 UTC

interface main:Main 8022
  interface hash: 9f06b0fedd50eacabd54c60fada8b995
  ABI hash: c742a3db70b030ddcd607115e2b383fe
  export-list hash: d4b9d93e722be54a267f33b380d4b129
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: da2448ad7a4a6f452e5da8fc3c1d49a7
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
module dependencies:
package dependencies: array-0.5.2.0 base-4.10.1.0 binary-0.8.5.1
                      bytestring-0.10.8.2 containers-0.5.10.2 deepseq-1.4.3.0
                      ghc-prim-0.5.1.1 integer-gmp-1.0.1.0 network-2.6.3.5
                      string-conversions-0.4.0.1 text-1.2.3.0 utf8-string-1.0.1.1
orphans: text-1.2.3.0:Data.Text.Lazy text-1.2.3.0:Data.Text
         binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.0:Data.Text.Show network-2.6.3.5:Network.Socket
         base-4.10.1.0:GHC.Float base-4.10.1.0:GHC.Base
family instance modules: base-4.10.1.0:Control.Applicative
                         base-4.10.1.0:Data.Complex base-4.10.1.0:Data.Either
                         base-4.10.1.0:Data.Functor.Compose base-4.10.1.0:Data.Functor.Const
                         base-4.10.1.0:Data.Functor.Identity
                         base-4.10.1.0:Data.Functor.Product base-4.10.1.0:Data.Functor.Sum
                         base-4.10.1.0:Data.List.NonEmpty base-4.10.1.0:Data.Monoid
                         base-4.10.1.0:Data.Semigroup base-4.10.1.0:Data.Type.Equality
                         base-4.10.1.0:Data.Version base-4.10.1.0:Data.Void
                         base-4.10.1.0:GHC.Exts base-4.10.1.0:GHC.Generics
                         base-4.10.1.0:GHC.IO.Exception base-4.10.1.0:GHC.TypeLits
                         base-4.10.1.0:GHC.TypeNats containers-0.5.10.2:Data.IntMap.Internal
                         containers-0.5.10.2:Data.IntSet.Internal
                         containers-0.5.10.2:Data.Map.Internal
                         containers-0.5.10.2:Data.Sequence.Internal
                         containers-0.5.10.2:Data.Set.Internal containers-0.5.10.2:Data.Tree
                         text-1.2.3.0:Data.Text text-1.2.3.0:Data.Text.Lazy
import  -/  base-4.10.1.0:Control.Monad ebed2e8e7444944e0c1d827c6faf40a4
import  -/  base-4.10.1.0:Data.Functor 2ffda4f936b8f474394d93205750aff3
import  -/  base-4.10.1.0:GHC.Base 782fd99b5e36f3698a26179a49afca64
import  -/  base-4.10.1.0:Prelude 31945b7d0084063347fc52506d3a4020
import  -/  base-4.10.1.0:System.Exit dfc0230e6f69e5284631635d15ff33dc
import  -/  base-4.10.1.0:System.IO 525805ab19df5e4fe6d8de7dde9cb909
import  -/  bytestring-0.10.8.2:Data.ByteString 0dbe3ec0b37e10f515b8722c5188101f
import  -/  bytestring-0.10.8.2:Data.ByteString.Char8 2b21e55d6d41b7eb23a5e8fb2dd2fc2f
import  -/  ghc-prim-0.5.1.1:GHC.Classes 93e2660065dce9329577e83d76d8f0d4
import  -/  ghc-prim-0.5.1.1:GHC.Types b1fd0716441595db508c1a74387bf394
import  -/  network-2.6.3.5:Network.Socket a7e32808b5c24dfafb4fefe1c09ee33c
import  -/  network-2.6.3.5:Network.Socket.ByteString e25f91c55cf6d42af815d80fd43d8b0a
import  -/  network-2.6.3.5:Network.Socket.Internal c0cb957defcd3bd139590e7be48d2e2b
import  -/  network-2.6.3.5:Network.Socket.Types e3dc7960904a3c325ec0b0ae76c5e560
import  -/  string-conversions-0.4.0.1:Data.String.Conversions 866b6dd42e010f15034999768530c2d0
9d72b2fddb818bcd8919052935e0f1f3
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule3 Main.$trModule1) -}
3108ceeaf5a318be844de422b45de9d8
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule2) -}
e5875966b74dad2d29772660b8a75e33
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Main"#) -}
33bd129667974f0a0ba4a893af79107d
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule4) -}
d026be77cb9ced20e35a61514e0458aa
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
081b1b0e3af75a8c7f09f30852403dcd
  $w$j ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> Network.Socket.Types.Family
    -> Network.Socket.Types.SocketType
    -> GHC.Prim.Int#
    -> Network.Socket.Types.SockAddr
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 5, Strictness: <S,U><S,U><S,U><S,U><L,U>, Inline: [0] -}
68aeebc091d62c4f4dea0ceb0fd43530
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
afa7fa77fbb5c4459c2078b898a8af8d
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main9
                        GHC.Types.True
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.Internals.wantReadableHandle_1
                        @ GHC.Base.String
                        GHC.IO.Handle.Text.hGetLine4
                        GHC.IO.Handle.FD.stdin
                        GHC.IO.Handle.Text.hGetLine2
                          `cast`
                        (<GHC.IO.Handle.Types.Handle__>_R
                         ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case Network.Socket.getAddrInfo1
                        Main.main7
                        (GHC.Base.Just @ Network.Socket.HostName ipv3)
                        Main.main4
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case ipv5 of wild {
                   []
                   -> case (GHC.Magic.noinline
                              @ (forall a. [GHC.Types.Char] -> GHC.Types.IO a)
                              GHC.IO.failIO1
                                `cast`
                              (forall (a :: <*>_N).
                               <GHC.Base.String>_R ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                              @ Network.Socket.AddrInfo
                              Main.main2)
                             `cast`
                           (GHC.Types.N:IO[0] <Network.Socket.AddrInfo>_R)
                             ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                      case ipv7 of ww { Network.Socket.AddrInfo ww1 ww2 ww3 ww4 ww5 ww6 ->
                      case ww4
                             `cast`
                           (Foreign.C.Types.N:CInt[0]) of ww7 { GHC.Int.I32# ww8 ->
                      Main.$w$j ipv6 ww2 ww3 ww8 ww5 } } }
                   : addr ds
                   -> case addr of ww { Network.Socket.AddrInfo ww1 ww2 ww3 ww4 ww5 ww6 ->
                      case ww4
                             `cast`
                           (Foreign.C.Types.N:CInt[0]) of ww7 { GHC.Int.I32# ww8 ->
                      Main.$w$j ipv4 ww2 ww3 ww8 ww5 } } } } } }) -}
70e523b476e24ed97c83bf52863d1a0a
  main10 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Input host:"#) -}
a2c5213cada8e46b4144ca83fa26f966
  main11 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
dd349b6d114e7ecfa7abaef7b44c529e
  main2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main3) -}
6e4bb92d9e65550f3d015d57451ee50f
  main3 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Pattern match failure in do expression at app/Client.hs:21:9-14"#) -}
af1503a3198e8ee6b5d263f875386c1b
  main4 :: GHC.Base.Maybe Network.Socket.ServiceName
  {- Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Network.Socket.ServiceName
                   Main.main5) -}
6ddd89bbef016b8bcbe27391a84e8664
  main5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main6) -}
ec6bfa881e4ffc3f1684e0c2a36c0d02
  main6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("4242"#) -}
072bb63744daf4b27cd25064a64d1491
  main7 :: GHC.Base.Maybe Network.Socket.AddrInfo
  {- Strictness: m2,
     Unfolding: (GHC.Base.Just @ Network.Socket.AddrInfo Main.main8) -}
cf05c64e6129b09370b60075e26794db
  main8 :: Network.Socket.AddrInfo
  {- Strictness: m,
     Unfolding: (Network.Socket.AddrInfo
                   (GHC.Types.[] @ Network.Socket.AddrInfoFlag)
                   Network.Socket.Types.AF_UNSPEC
                   Network.Socket.Types.Stream
                   Network.Socket.defaultHints3
                     `cast`
                   (Sym (Foreign.C.Types.N:CInt[0]))
                   Network.Socket.defaultHints2
                   Network.Socket.defaultHints1) -}
f59f60afd6c7039b784fae6b8218c940
  main9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main10) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

