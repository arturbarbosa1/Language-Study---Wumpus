
==================== FINAL INTERFACE ====================
2018-05-10 00:09:43.164481 UTC

interface main:Main 8022
  interface hash: 91f7a13574ea5108a7d5caba70e56e46
  ABI hash: 6443a583911320c152563ec19381201e
  export-list hash: 59d86194bd593df49050d08673ce31ee
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 87b0763b838e45d180d48918afde4960
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.loopPlayer
  Main.loopWumpus
  Main.main
  Main.runPlayer
  Main.runWumpus
  Main.startGame
module dependencies:
package dependencies: array-0.5.2.0 base-4.10.1.0 binary-0.8.5.1
                      bytestring-0.10.8.2 containers-0.5.10.2 deepseq-1.4.3.0
                      ghc-prim-0.5.1.1 integer-gmp-1.0.1.0 network-2.6.3.5 random-1.1
                      string-conversions-0.4.0.1 text-1.2.3.0 time-1.8.0.2
                      utf8-string-1.0.1.1 wumpus-0.1.0.0
orphans: text-1.2.3.0:Data.Text.Lazy text-1.2.3.0:Data.Text
         binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.0:Data.Text.Show network-2.6.3.5:Network.Socket
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian base-4.10.1.0:GHC.Float
         base-4.10.1.0:GHC.Base
family instance modules: base-4.10.1.0:Control.Applicative
                         base-4.10.1.0:Data.Complex base-4.10.1.0:Data.Either
                         base-4.10.1.0:Data.Functor.Compose base-4.10.1.0:Data.Functor.Const
                         base-4.10.1.0:Data.Functor.Identity
                         base-4.10.1.0:Data.Functor.Product base-4.10.1.0:Data.Functor.Sum
                         base-4.10.1.0:Data.List.NonEmpty base-4.10.1.0:Data.Monoid
                         base-4.10.1.0:Data.Semigroup base-4.10.1.0:Data.Type.Equality
                         base-4.10.1.0:Data.Version base-4.10.1.0:Data.Void
                         base-4.10.1.0:GHC.Exts base-4.10.1.0:GHC.Generics
                         base-4.10.1.0:GHC.IO.Exception base-4.10.1.0:GHC.TypeLits
                         base-4.10.1.0:GHC.TypeNats containers-0.5.10.2:Data.IntMap.Internal
                         containers-0.5.10.2:Data.IntSet.Internal
                         containers-0.5.10.2:Data.Map.Internal
                         containers-0.5.10.2:Data.Sequence.Internal
                         containers-0.5.10.2:Data.Set.Internal containers-0.5.10.2:Data.Tree
                         text-1.2.3.0:Data.Text text-1.2.3.0:Data.Text.Lazy
import  -/  base-4.10.1.0:Control.Concurrent 54b4f33006223552c60861a4a302d698
import  -/  base-4.10.1.0:Control.Monad ebed2e8e7444944e0c1d827c6faf40a4
import  -/  base-4.10.1.0:Data.Functor 2ffda4f936b8f474394d93205750aff3
import  -/  base-4.10.1.0:Data.Monoid c0108b166e27f747671c7fe4ffb11019
import  -/  base-4.10.1.0:GHC.Base 782fd99b5e36f3698a26179a49afca64
import  -/  base-4.10.1.0:GHC.Conc.IO 3d3ed1eedced01b2e41cf8a1ffd12e47
import  -/  base-4.10.1.0:GHC.Conc.Sync 3cf9d980bef04043684377f638021935
import  -/  base-4.10.1.0:GHC.List e3060fbeb44ce0038e6b4dedf2dd9cf1
import  -/  base-4.10.1.0:GHC.MVar b1970e54b4c552d660c9a97d807961dc
import  -/  base-4.10.1.0:GHC.Num 6e1dc5d36d99a802edb39b92bb1923b8
import  -/  base-4.10.1.0:GHC.Show 0a8ce2b5e533d1c2cfb7954e6736be45
import  -/  base-4.10.1.0:Prelude 31945b7d0084063347fc52506d3a4020
import  -/  base-4.10.1.0:System.IO 525805ab19df5e4fe6d8de7dde9cb909
import  -/  ghc-prim-0.5.1.1:GHC.Types b1fd0716441595db508c1a74387bf394
import  -/  network-2.6.3.5:Network.Socket a7e32808b5c24dfafb4fefe1c09ee33c
import  -/  network-2.6.3.5:Network.Socket.ByteString e25f91c55cf6d42af815d80fd43d8b0a
import  -/  network-2.6.3.5:Network.Socket.Types e3dc7960904a3c325ec0b0ae76c5e560
import  -/  string-conversions-0.4.0.1:Data.String.Conversions 866b6dd42e010f15034999768530c2d0
import  -/  wumpus-0.1.0.0:Wumpus.Actions ea9e7e2433f40898ce8650dcc17d2f87
import  -/  wumpus-0.1.0.0:Wumpus.Grid bbdbd938802d9288045fba6edfd0fc6d
import  -/  wumpus-0.1.0.0:Wumpus.Utils 5f9edd142f71e65acfabcb1f510b1359
9d72b2fddb818bcd8919052935e0f1f3
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule3 Main.$trModule1) -}
3108ceeaf5a318be844de422b45de9d8
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule2) -}
e5875966b74dad2d29772660b8a75e33
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Main"#) -}
33bd129667974f0a0ba4a893af79107d
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule4) -}
d026be77cb9ced20e35a61514e0458aa
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
7c38f9f1482925ec459613c91179eba8
  $wloopPlayer ::
    Network.Socket.Types.Socket
    -> GHC.Prim.MVar# GHC.Prim.RealWorld Wumpus.Grid.Game
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U(U(U),A,A,A,A)><S,U><S,U>,
     Inline: [0] -}
f334d951d356223796814222ad489945
  $wloopWumpus ::
    Network.Socket.Types.Socket
    -> GHC.Prim.MVar# GHC.Prim.RealWorld Wumpus.Grid.Game
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U(U(U),A,A,A,A)><S,U><S,U>,
     Inline: [0] -}
e814564dac02f05b579541bdc4c59f8d
  $wrunPlayer ::
    GHC.Prim.Int#
    -> GHC.MVar.MVar Wumpus.Grid.Game
    -> GHC.MVar.MVar GHC.Types.Bool
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <S,U><L,1*U(U)><L,1*U(U)><S,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (w :: GHC.MVar.MVar Wumpus.Grid.Game)
                   (w1 :: GHC.MVar.MVar GHC.Types.Bool)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Main.runPlayer13 of wild { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                 case Network.Socket.$wsendBuf
                        ww
                        (GHC.Prim.plusAddr# dt dt2)
                        dt3
                        w2 of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Prim.touch#
                        @ 'GHC.Types.LiftedRep
                        @ GHC.ForeignPtr.ForeignPtrContents
                        dt1
                        ipv of s' { DEFAULT ->
                 case w1 of wild1 { GHC.MVar.MVar mvar# ->
                 case GHC.Prim.takeMVar#
                        @ GHC.Prim.RealWorld
                        @ GHC.Types.Bool
                        mvar#
                        s' of ds2 { (#,#) ipv2 ipv3 ->
                 case Main.runPlayer12 of wild2 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                 case Network.Socket.$wsendBuf
                        ww
                        (GHC.Prim.plusAddr# dt4 dt6)
                        dt7
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case GHC.Prim.touch#
                        @ 'GHC.Types.LiftedRep
                        @ GHC.ForeignPtr.ForeignPtrContents
                        dt5
                        ipv4 of s'1 { DEFAULT ->
                 case Main.runPlayer11 of wild3 { Data.ByteString.Internal.PS dt8 dt9 dt10 dt11 ->
                 case Network.Socket.$wsendBuf
                        ww
                        (GHC.Prim.plusAddr# dt8 dt10)
                        dt11
                        s'1 of ds4 { (#,#) ipv6 ipv7 ->
                 case GHC.Prim.touch#
                        @ 'GHC.Types.LiftedRep
                        @ GHC.ForeignPtr.ForeignPtrContents
                        dt9
                        ipv6 of s'2 { DEFAULT ->
                 case Main.runPlayer10 of wild4 { Data.ByteString.Internal.PS dt12 dt13 dt14 dt15 ->
                 case Network.Socket.$wsendBuf
                        ww
                        (GHC.Prim.plusAddr# dt12 dt14)
                        dt15
                        s'2 of ds5 { (#,#) ipv8 ipv9 ->
                 case GHC.Prim.touch#
                        @ 'GHC.Types.LiftedRep
                        @ GHC.ForeignPtr.ForeignPtrContents
                        dt13
                        ipv8 of s'3 { DEFAULT ->
                 case w of ww1 { GHC.MVar.MVar ww2 ->
                 case Main.$wloopPlayer
                        (Network.Socket.Types.MkSocket
                           (GHC.Int.I32# ww) `cast` (Sym (Foreign.C.Types.N:CInt[0]))
                           Main.runPlayer8
                           Main.runPlayer6
                           Main.runPlayer4
                           Main.runPlayer2)
                        ww2
                        s'3 of ds6 { (#,#) ipv10 ipv11 ->
                 case GHC.Prim.putMVar#
                        @ GHC.Prim.RealWorld
                        @ GHC.Types.Bool
                        mvar#
                        GHC.Types.True
                        ipv10 of s2# { DEFAULT ->
                 (# s2#, GHC.Tuple.() #) } } } } } } } } } } } } } } } } }) -}
35a6df2bc6c851d815d2ffd854646065
  $wrunWumpus ::
    GHC.Prim.Int#
    -> GHC.MVar.MVar Wumpus.Grid.Game
    -> GHC.MVar.MVar GHC.Types.Bool
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <S,U><L,1*U(U)><L,1*U(U)><S,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (w :: GHC.MVar.MVar Wumpus.Grid.Game)
                   (w1 :: GHC.MVar.MVar GHC.Types.Bool)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Main.runWumpus5 of wild { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                 case Network.Socket.$wsendBuf
                        ww
                        (GHC.Prim.plusAddr# dt dt2)
                        dt3
                        w2 of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Prim.touch#
                        @ 'GHC.Types.LiftedRep
                        @ GHC.ForeignPtr.ForeignPtrContents
                        dt1
                        ipv of s' { DEFAULT ->
                 case w1 of wild1 { GHC.MVar.MVar mvar# ->
                 case GHC.Prim.putMVar#
                        @ GHC.Prim.RealWorld
                        @ GHC.Types.Bool
                        mvar#
                        GHC.Types.True
                        s' of s2# { DEFAULT ->
                 case Main.runWumpus4 of wild2 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                 case Network.Socket.$wsendBuf
                        ww
                        (GHC.Prim.plusAddr# dt4 dt6)
                        dt7
                        s2# of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.Prim.touch#
                        @ 'GHC.Types.LiftedRep
                        @ GHC.ForeignPtr.ForeignPtrContents
                        dt5
                        ipv2 of s'1 { DEFAULT ->
                 case Main.runWumpus3 of wild3 { Data.ByteString.Internal.PS dt8 dt9 dt10 dt11 ->
                 case Network.Socket.$wsendBuf
                        ww
                        (GHC.Prim.plusAddr# dt8 dt10)
                        dt11
                        s'1 of ds3 { (#,#) ipv4 ipv5 ->
                 case GHC.Prim.touch#
                        @ 'GHC.Types.LiftedRep
                        @ GHC.ForeignPtr.ForeignPtrContents
                        dt9
                        ipv4 of s'2 { DEFAULT ->
                 case {__pkg_ccall base-4.10.1.0 GHC.Prim.State# GHC.Prim.RealWorld
                                                 -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                       GHC.Prim.Int# #)}
                        GHC.Prim.realWorld# of wild4 { (#,#) ds ds4 ->
                 case ds4 of wild5 {
                   DEFAULT
                   -> case GHC.Event.Thread.threadDelay1
                             Main.runWumpus2
                             s'2 of ds5 { (#,#) ipv6 ipv7 ->
                      case w of ww1 { GHC.MVar.MVar ww2 ->
                      case Main.$wloopWumpus
                             (Network.Socket.Types.MkSocket
                                (GHC.Int.I32# ww) `cast` (Sym (Foreign.C.Types.N:CInt[0]))
                                Main.runPlayer8
                                Main.runPlayer6
                                Main.runPlayer4
                                Main.runPlayer2)
                             ww2
                             ipv6 of ds6 { (#,#) ipv8 ipv9 ->
                      case GHC.Prim.takeMVar#
                             @ GHC.Prim.RealWorld
                             @ GHC.Types.Bool
                             mvar#
                             ipv8 of ds7 { (#,#) ipv10 ipv11 ->
                      case GHC.Prim.putMVar#
                             @ GHC.Prim.RealWorld
                             @ GHC.Types.Bool
                             mvar#
                             GHC.Types.True
                             ipv10 of s2#1 { DEFAULT ->
                      (# s2#1, GHC.Tuple.() #) } } } } }
                   0#
                   -> case GHC.Prim.delay#
                             @ GHC.Prim.RealWorld
                             1000#
                             s'2 of s'3 { DEFAULT ->
                      case w of ww1 { GHC.MVar.MVar ww2 ->
                      case Main.$wloopWumpus
                             (Network.Socket.Types.MkSocket
                                (GHC.Int.I32# ww) `cast` (Sym (Foreign.C.Types.N:CInt[0]))
                                Main.runPlayer8
                                Main.runPlayer6
                                Main.runPlayer4
                                Main.runPlayer2)
                             ww2
                             s'3 of ds5 { (#,#) ipv6 ipv7 ->
                      case GHC.Prim.takeMVar#
                             @ GHC.Prim.RealWorld
                             @ GHC.Types.Bool
                             mvar#
                             ipv6 of ds6 { (#,#) ipv8 ipv9 ->
                      case GHC.Prim.putMVar#
                             @ GHC.Prim.RealWorld
                             @ GHC.Types.Bool
                             mvar#
                             GHC.Types.True
                             ipv8 of s2#1 { DEFAULT ->
                      (# s2#1, GHC.Tuple.() #) } } } } } } } } } } } } } } } } } }) -}
3ed00b7640100a62c9653d0063e2c6f8
  loopPlayer ::
    Network.Socket.Types.Socket
    -> GHC.MVar.MVar Wumpus.Grid.Game -> GHC.Types.IO ()
  {- Arity: 3, Strictness: <L,U(U(U),A,A,A,A)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.loopPlayer1
                  `cast`
                (<Network.Socket.Types.Socket>_R
                 ->_R <GHC.MVar.MVar Wumpus.Grid.Game>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
08efd9086ca3c57160f8e20a1c363884
  loopPlayer1 ::
    Network.Socket.Types.Socket
    -> GHC.MVar.MVar Wumpus.Grid.Game
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U(U(U),A,A,A,A)><S(S),1*U(U)><S,U>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Network.Socket.Types.Socket)
                   (w1 :: GHC.MVar.MVar Wumpus.Grid.Game)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w1 of ww { GHC.MVar.MVar ww1 ->
                 Main.$wloopPlayer w ww1 w2 }) -}
57c28a3aff98193bf29b0a3d730bd346
  loopWumpus ::
    Network.Socket.Types.Socket
    -> GHC.MVar.MVar Wumpus.Grid.Game -> GHC.Types.IO ()
  {- Arity: 3, Strictness: <L,U(U(U),A,A,A,A)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.loopWumpus1
                  `cast`
                (<Network.Socket.Types.Socket>_R
                 ->_R <GHC.MVar.MVar Wumpus.Grid.Game>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
34dcc03ac989c88cb9115110f5a6f095
  loopWumpus1 ::
    Network.Socket.Types.Socket
    -> GHC.MVar.MVar Wumpus.Grid.Game
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U(U(U),A,A,A,A)><S(S),1*U(U)><S,U>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Network.Socket.Types.Socket)
                   (w1 :: GHC.MVar.MVar Wumpus.Grid.Game)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w1 of ww { GHC.MVar.MVar ww1 ->
                 Main.$wloopWumpus w ww1 w2 }) -}
c89cd9f59eef4d858f7d866510f83b44
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
c3a8eade8efdc5425f412186b10db0c6
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Network.Socket.$wsocket
                        Network.Socket.Types.AF_INET
                        Network.Socket.Types.Stream
                        0#
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of ww { Network.Socket.Types.MkSocket ww1 ww2 ww3 ww4 ww5 ->
                 case ww1
                        `cast`
                      (Foreign.C.Types.N:CInt[0]) of ww6 { GHC.Int.I32# ww7 ->
                 case Network.Socket.$wsetSocketOption
                        ww7
                        Network.Socket.ReuseAddr
                        1#
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ww5 of ww11 { GHC.MVar.MVar ww12 ->
                 case Network.Socket.$wbind
                        ww6 `cast` (Sym (Foreign.C.Types.N:CInt[0]))
                        ww12
                        Main.main4
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case Network.Socket.$wlisten
                        ww6 `cast` (Sym (Foreign.C.Types.N:CInt[0]))
                        ww12
                        Main.main3
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 Main.main2 ww ipv6 } } } } } } }) -}
533d525ea9d8e8e40c5ec570224f7f26
  main2 ::
    Network.Socket.Types.Socket
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,1*U(U(U),U,U,U(U),1*U(U))><S,U> -}
d2dc5c13048faa822d9614a96bc8bc88
  main3 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 2#) -}
934384fd4a2f696f899d72fc63dbfd30
  main4 :: Network.Socket.Types.SockAddr
  {- Strictness: m1,
     Unfolding: (Network.Socket.Types.SockAddrInet
                   Main.main5
                   Network.Socket.iNADDR_ANY) -}
321694e731872fc1e2bbd2a8d451d1cb
  main5 :: Network.Socket.Types.PortNumber
  {- Unfolding: (case {__pkg_ccall network-2.6.3.5 GHC.Prim.Word#
                                                   -> GHC.Prim.State# GHC.Prim.RealWorld
                                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                         GHC.Prim.Word# #)}
                        4242##
                        GHC.Prim.realWorld# of wild1 { (#,#) ds ds1 ->
                 (GHC.Word.W16# (GHC.Prim.narrow16Word# ds1))
                   `cast`
                 (Sym (Network.Socket.Types.N:PortNumber[0])) }) -}
d669b2945ca4bd0c275acda2c3f0d5de
  main6 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
e2380684af99dc5a63ca5e136ee06367
  runPlayer ::
    (Network.Socket.Types.Socket, Network.Socket.Types.SockAddr)
    -> GHC.MVar.MVar Wumpus.Grid.Game
    -> GHC.MVar.MVar GHC.Types.Bool
    -> GHC.Types.IO ()
  {- Arity: 4,
     Strictness: <S(S(S(S)LLLL)L),1*U(1*U(1*U(U),A,A,A,A),A)><L,1*U(U)><L,1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.runPlayer1
                  `cast`
                (<(Network.Socket.Types.Socket, Network.Socket.Types.SockAddr)>_R
                 ->_R <GHC.MVar.MVar Wumpus.Grid.Game>_R
                 ->_R <GHC.MVar.MVar GHC.Types.Bool>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
80ad229afe0ac445b2e30297c297e34d
  runPlayer1 ::
    (Network.Socket.Types.Socket, Network.Socket.Types.SockAddr)
    -> GHC.MVar.MVar Wumpus.Grid.Game
    -> GHC.MVar.MVar GHC.Types.Bool
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4,
     Strictness: <S(S(S(S)LLLL)L),1*U(1*U(1*U(U),A,A,A,A),A)><L,1*U(U)><L,1*U(U)><S,U>,
     Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: (Network.Socket.Types.Socket,
                          Network.Socket.Types.SockAddr))
                   (w1 :: GHC.MVar.MVar Wumpus.Grid.Game)
                   (w2 :: GHC.MVar.MVar GHC.Types.Bool)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { (,) ww1 ww2 ->
                 case ww1 of ww3 { Network.Socket.Types.MkSocket ww4 ww5 ww6 ww7 ww8 ->
                 case ww4
                        `cast`
                      (Foreign.C.Types.N:CInt[0]) of ww9 { GHC.Int.I32# ww10 ->
                 Main.$wrunPlayer ww10 w1 w2 w3 } } }) -}
cb028bc9c60ecadf5a6225b40815e96c
  runPlayer10 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Main.runPlayer_addr#
                        ipv of wild { (#,#) ds ds2 ->
                 Data.ByteString.Internal.PS
                   Main.runPlayer_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds2) } }) -}
4a8e6166340fc39e2ce7cb95934b6102
  runPlayer11 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Main.runPlayer_addr#1
                        ipv of wild { (#,#) ds ds2 ->
                 Data.ByteString.Internal.PS
                   Main.runPlayer_addr#1
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds2) } }) -}
1f7e603ad834979f64d177690de6ed7c
  runPlayer12 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Main.runPlayer_addr#2
                        ipv of wild { (#,#) ds ds2 ->
                 Data.ByteString.Internal.PS
                   Main.runPlayer_addr#2
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds2) } }) -}
5aea649f612b50d3e99b1058fef35a95
  runPlayer13 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Main.runPlayer_addr#3
                        ipv of wild { (#,#) ds ds2 ->
                 Data.ByteString.Internal.PS
                   Main.runPlayer_addr#3
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds2) } }) -}
d16fd6c40800ba4580040e52046d27b8
  runPlayer2 :: GHC.MVar.MVar Network.Socket.Types.SocketStatus
  {- Unfolding: (Control.Exception.Base.absentError
                   @ (GHC.MVar.MVar Network.Socket.Types.SocketStatus)
                   Main.runPlayer3) -}
7f826a36133ed600676378bef56167a2
  runPlayer3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ww MVar SocketStatus"#) -}
6649b4f61012e33d311cf0900ac2bed8
  runPlayer4 :: Network.Socket.Types.ProtocolNumber
  {- Unfolding: (Control.Exception.Base.absentError
                   @ Network.Socket.Types.ProtocolNumber
                   Main.runPlayer5) -}
86cb90a844452eb84a78801dfa893fa6
  runPlayer5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ww ProtocolNumber"#) -}
1c4f84f017fd27d1d1cda2e168c2d4e5
  runPlayer6 :: Network.Socket.Types.SocketType
  {- Unfolding: (Control.Exception.Base.absentError
                   @ Network.Socket.Types.SocketType
                   Main.runPlayer7) -}
f95ef3f96791147cc52125e39b5550de
  runPlayer7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ww SocketType"#) -}
f4b4b1e67a16d2dc9254926326e2fc47
  runPlayer8 :: Network.Socket.Types.Family
  {- Unfolding: (Control.Exception.Base.absentError
                   @ Network.Socket.Types.Family
                   Main.runPlayer9) -}
89c31590a197ee3bba0c1833cb85d963
  runPlayer9 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ww Family"#) -}
4a8d7da79eff0baa28a3e08a4944b5ac
  runPlayer_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Also you can stupidly sleep.\n\
                 \Expect some dangers.\n\
                 \\n"#) -}
fa0b744472f3aab10152818db1391af8
  runPlayer_addr#1 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("You can move to neighbour room or shoot.\n\
                 \If you shoot you must name all rooms you expect to hit.\n\
                 \You have five arrows.\n"#) -}
e659dfba94bedad0e44551551248a59e
  runPlayer_addr#2 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Game is started. Stay away from wumpus and try to hit him.\n"#) -}
f37ecf072e6e6c449f0f9824791f1992
  runPlayer_addr#3 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\n\
                 \Hello, player!\n\
                 \\n"#) -}
f5c6eb9ea54848e40fbe3be9628fa3d4
  runWumpus ::
    (Network.Socket.Types.Socket, Network.Socket.Types.SockAddr)
    -> GHC.MVar.MVar Wumpus.Grid.Game
    -> GHC.MVar.MVar GHC.Types.Bool
    -> GHC.Types.IO ()
  {- Arity: 4,
     Strictness: <S(S(S(S)LLLL)L),1*U(1*U(1*U(U),A,A,A,A),A)><L,1*U(U)><L,1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.runWumpus1
                  `cast`
                (<(Network.Socket.Types.Socket, Network.Socket.Types.SockAddr)>_R
                 ->_R <GHC.MVar.MVar Wumpus.Grid.Game>_R
                 ->_R <GHC.MVar.MVar GHC.Types.Bool>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
2b7479ee7525ce730e7539551b6252b2
  runWumpus1 ::
    (Network.Socket.Types.Socket, Network.Socket.Types.SockAddr)
    -> GHC.MVar.MVar Wumpus.Grid.Game
    -> GHC.MVar.MVar GHC.Types.Bool
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4,
     Strictness: <S(S(S(S)LLLL)L),1*U(1*U(1*U(U),A,A,A,A),A)><L,1*U(U)><L,1*U(U)><S,U>,
     Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: (Network.Socket.Types.Socket,
                          Network.Socket.Types.SockAddr))
                   (w1 :: GHC.MVar.MVar Wumpus.Grid.Game)
                   (w2 :: GHC.MVar.MVar GHC.Types.Bool)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { (,) ww1 ww2 ->
                 case ww1 of ww3 { Network.Socket.Types.MkSocket ww4 ww5 ww6 ww7 ww8 ->
                 case ww4
                        `cast`
                      (Foreign.C.Types.N:CInt[0]) of ww9 { GHC.Int.I32# ww10 ->
                 Main.$wrunWumpus ww10 w1 w2 w3 } } }) -}
6f541f4e55242fa21aa5450f2cbaa9d3
  runWumpus2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1000#) -}
6b1747de188fe536677a0eb5f0e36752
  runWumpus3 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Main.runWumpus_addr#
                        ipv of wild { (#,#) ds ds2 ->
                 Data.ByteString.Internal.PS
                   Main.runWumpus_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds2) } }) -}
22138b08f2afdbf7d0abc37f15a620d2
  runWumpus4 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Main.runWumpus_addr#1
                        ipv of wild { (#,#) ds ds2 ->
                 Data.ByteString.Internal.PS
                   Main.runWumpus_addr#1
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds2) } }) -}
bf3989d95dbb55f54be3a6a9997458ad
  runWumpus5 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Main.runWumpus_addr#2
                        ipv of wild { (#,#) ds ds2 ->
                 Data.ByteString.Internal.PS
                   Main.runWumpus_addr#2
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds2) } }) -}
03d58d381fdf049bc9d9d68095a19f4e
  runWumpus_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("You can sleep.\n\
                 \Or move to closest room.\n\
                 \\n"#) -}
b546816099aaed39c728c656f98af3b2
  runWumpus_addr#1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Game is started.\n"#) -}
9574c2e82cd75ca2f48836316e9b1c39
  runWumpus_addr#2 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\n\
                 \Hello, Wumpus!\n\
                 \\n"#) -}
1c7d6784df9c0239e84f1ea4e411431d
  startGame :: Network.Socket.Types.Socket -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,1*U(U(U),U,U,U(U),1*U(U))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main2
                  `cast`
                (<Network.Socket.Types.Socket>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

